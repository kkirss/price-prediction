/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v2/assets/{id}": {
    /** Get asset details */
    get: operations["getAssetDetails"];
    parameters: {
      path: {
        id: components["parameters"]["assetId"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      /**
       * @example [
       *   "Not found"
       * ]
       */
      error: string;
      /**
       * @example [
       *   1533581098863
       * ]
       */
      timestamp: number;
    };
    /**
     * @example {
     *   "id": "bitcoin",
     *   "rank": "1",
     *   "symbol": "BTC",
     *   "name": "Bitcoin",
     *   "supply": "17193925.0000000000000000",
     *   "maxSupply": "21000000.0000000000000000",
     *   "marketCapUsd": "119150835874.4699281625807300",
     *   "volumeUsd24Hr": "2927959461.1750323310959460",
     *   "priceUsd": "6929.8217756835584756",
     *   "changePercent24Hr": "-0.8101417214350335",
     *   "vwap24Hr": "7175.0663247679233209"
     * }
     */
    Asset: {
      /**
       * @example [
       *   "bitcoin"
       * ]
       */
      id: string;
      /**
       * @example [
       *   "1"
       * ]
       */
      rank: string;
      /**
       * @example [
       *   "BTC"
       * ]
       */
      symbol: string;
      /**
       * @example [
       *   "Bitcoin"
       * ]
       */
      name: string;
      /**
       * @example [
       *   "17193925.0000000000000000"
       * ]
       */
      supply: string;
      /**
       * @example [
       *   "21000000.0000000000000000"
       * ]
       */
      maxSupply: string;
      /**
       * @example [
       *   "119150835874.4699281625807300"
       * ]
       */
      marketCapUsd: string;
      /**
       * @example [
       *   "2927959461.1750323310959460"
       * ]
       */
      volumeUsd24Hr: string;
      /**
       * @example [
       *   "6929.8217756835584756"
       * ]
       */
      priceUsd: string;
      /**
       * @example [
       *   "-0.8101417214350335"
       * ]
       */
      changePercent24Hr: string;
      /**
       * @example [
       *   "7175.0663247679233209"
       * ]
       */
      vwap24Hr: string;
    };
    /**
     * @example {
     *   "data": {
     *     "id": "bitcoin",
     *     "rank": "1",
     *     "symbol": "BTC",
     *     "name": "Bitcoin",
     *     "supply": "17193925.0000000000000000",
     *     "maxSupply": "21000000.0000000000000000",
     *     "marketCapUsd": "119150835874.4699281625807300",
     *     "volumeUsd24Hr": "2927959461.1750323310959460",
     *     "priceUsd": "6929.8217756835584756",
     *     "changePercent24Hr": "-0.8101417214350335",
     *     "vwap24Hr": "7175.0663247679233209"
     *   },
     *   "timestamp": 1533581098863
     * }
     */
    AssetDetailsResponse: {
      data: components["schemas"]["Asset"];
      /**
       * @example [
       *   1533581098863
       * ]
       */
      timestamp: number;
    };
  };
  responses: {
    /** @description Not found */
    NotFoundResponse: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Bad request */
    BadRequestResponse: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** @description Asset details response */
    AssetDetailsResponse: {
      content: {
        "application/json": components["schemas"]["AssetDetailsResponse"];
      };
    };
  };
  parameters: {
    assetId: string;
  };
  requestBodies: never;
  headers: {
  };
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get asset details */
  getAssetDetails: {
    parameters: {
      path: {
        id: components["parameters"]["assetId"];
      };
    };
    responses: {
      200: components["responses"]["AssetDetailsResponse"];
      400: components["responses"]["BadRequestResponse"];
      404: components["responses"]["NotFoundResponse"];
    };
  };
}
